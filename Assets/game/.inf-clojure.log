
----CMD->
"(find-ns 'lumo.repl)"
----CMD->
"(find-ns 'planck.repl)"
----CMD->
"(ns game.core  (require [arcadia.core :refer :all]))\n"
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all]))\n"
<-RES----
"user=> "
----CMD->
"(find-ns 'lumo.repl)"
<-RES----
"nil\n"
----CMD->
"(find-ns 'planck.repl)"
<-RES----
""
----CMD->
"(load-file \"/Users/jona/unity/arcadia-network-example/Assets/game/core.clj\")\n"
<-RES----
"nil\nuser=> user=> "
<-RES----
"#'game.core/got-edn\nuser=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])) (defn got-edn  [edn]  (prn \"hej\" edn))\n"
<-RES----
"nil\n"
----CMD->
"1\n"
<-RES----
"#'game.core/got-edn\ngame.core=> "
<-RES----
"1\ngame.core=> "
----CMD->
"(got-edn \"{:1 aoo}\")\n"
<-RES----
"\"hej\" \"{"
<-RES----
":1 aoo}\"\n"
<-RES----
"nil\ngame.core=> "
----CMD->
"(defn got-edn  [edn]  (log \"hej\" edn))\n"
<-RES----
"#'game.core/got-edn\ngame.core=> "
----CMD->
"(got-edn \"{:1 aoo}\")\n"
<-RES----
"nil\ngame.core=> "
----CMD->
"(load-file \"/Users/jona/unity/arcadia-network-example/Assets/game/core.clj\")\n"
<-RES----
"CompilerException clojure.lang.ArityException: Wrong number of args (1) passed to: clojure/core/-DOT--DOT---1650\n  at clojure.lang.Compiler.MacroexpandSeq1 (clojure.lang.ISeq form) [0x00062] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.AnalyzeSeq (clojure.lang.CljCompiler.Ast.ParserContext pcon, clojure.lang.ISeq form, System.String name) [0x000e0] in <e5c1049893bf4d6f8893a41079c4a366>:0 , compiling: (/Users/jona/unity/arcadia-network-example/Assets/game/core.clj:11:4)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.BodyExpr+Parser.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnMethod.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.DefExpr+Parser.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.load (:0)\nclojure.lang.Compiler.loadFile (:0)\nclojure.lang.RT+LoadFileFn.invoke (:0)\ngame/core$eval__32379__32384.invokeStatic (:0)\ngame/core$eval__32379__32384.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import Test)) (defn got-edn  [edn]  (log \"hej\" edn)) (defn send-edn  [edn]  (.. (cmpt (object-named \"EventSystem\") Test) (SendEdnMsg edn)))\n"
<-RES----
"nil\n"
----CMD->
"1\n"
<-RES----
"#'game.core/got-edn\n"
<-RES----
"#'game.core/send-edn\ngame.core=> "
<-RES----
"1\n"
<-RES----
"game.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import Test)) (defonce data (atom {})) (add-watch data #([_ _ _ _]  (prn data))) (defn got-edn  [edn]  (reset! data edn)) (defn send-edn  [edn]  (.. (cmpt (object-named \"EventSystem\") Test) (SendEdnMsg edn)))\n"
<-RES----
"nil\n"
----CMD->
"12\n"
<-RES----
"#'game.core/data\n"
<-RES----
"CompilerException System.InvalidOperationException: Unable to resolve symbol: _ in this context\n  at clojure.lang.Compiler.ResolveIn (clojure.lang.Namespace n, clojure.lang.Symbol symbol, System.Boolean allowPrivate) [0x0011c] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.Resolve (clojure.lang.Symbol symbol) [0x00005] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.AnalyzeSymbol (clojure.lang.Symbol symbol) [0x000fa] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.Analyze (clojure.lang.CljCompiler.Ast.ParserContext pcontext, System.Object form, System.String name) [0x00078] in <e5c1049893bf4d6f8893a41079c4a366>:0 , compiling: (NO_SOURCE_PATH:14:114)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.VectorExpr.Parse (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.InvokeExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.BodyExpr+Parser.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnMethod.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.InvokeExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.BodyExpr+Parser.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnMethod.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\n"
<-RES----
"#'game.core/got-edn\n"
<-RES----
"#'game.core/send-edn\ngame.core=> "
<-RES----
"12\ngame.core=> "
----CMD->
"(add-watch data (fn [_ _ _ _] (prn data)))\n"
<-RES----
"ArityException Wrong number of args (2) passed to: clojure/core/add-watch--2110\nclojure.lang.AFn.invoke (:0)\ngame/core$eval__32540__32552.invokeStatic (:0)\ngame/core$eval__32540__32552.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import Test)) (defonce data (atom {})) (add-watch data (fn [_ _ _ _] (prn data))) (defn got-edn  [edn]  (reset! data edn)) (defn send-edn  [edn]  (.. (cmpt (object-named \"EventSystem\") Test) (SendEdnMsg edn)))\n"
<-RES----
"nil\n"
----CMD->
"1\n"
<-RES----
"nil\n"
<-RES----
"ArityException Wrong number of args (2) passed to: clojure/core/add-watch--2110\nclojure.lang.AFn.invoke (:0)\ngame/core$eval__32595__32607.invokeStatic (:0)\ngame/core$eval__32595__32607.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\n"
<-RES----
"#'game.core/got-edn\n"
<-RES----
"#'game.core/send-edn\ngame.core=> "
<-RES----
"1\ngame.core=> "
----CMD->
"(do (if-not (find-ns 'game.core) (try (require 'game.core :reload) (catch Exception e (ns game.core )))) (in-ns 'game.core)(do (require '[clojure.repl :as temp-clojure-repl-ns]) (temp-clojure-repl-ns/source add-watch)))"
<-RES----
"(defn add-watch\n  \"Adds a watch function to an agent/atom/var/ref reference. The watch\n  fn must be a fn of 4 args: a key, the reference, its old-state, its\n  new-state. Whenever the reference's state might have been changed,\n  any registered watches will have their functions called. The watch fn\n  will be called synchronously, on the agent's thread if an agent,\n  before any pending sends if agent or ref. Note that an atom's or\n  ref's state may have changed again prior to the fn call, so use\n  old/new-state rather than derefing the reference. Note also that watch\n  fns may be called from multiple threads simultaneously. Var watchers\n  are triggered only by root binding changes, not thread-local\n  set!s. Keys must be unique per reference, and can be used to remove\n  the watch with remove-watch, but are otherwise considered opaque by\n  the watch mechanism.\"\n  {:added \"1.0\"\n   :static true}\n  [^clojure.lang.IRef reference key fn] (.addWatch reference key fn))\nnil\n"
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import Test)) (defonce data (atom {})) (add-watch data :data-watcher (fn [_ _ _ _] (prn data))) (defn got-edn  [edn]  (reset! data edn)) (defn send-edn  [edn]  (.. (cmpt (object-named \"EventSystem\") Test) (SendEdnMsg edn)))\n"
<-RES----
"game.core=> "
<-RES----
"nil\n"
----CMD->
"123\n"
<-RES----
"nil\n"
<-RES----
"#object[Atom 0xa531d200 {:status :ready, :val {}}]\n"
<-RES----
"#'game.core/got-edn\n"
<-RES----
"#'game.core/send-edn\ngame.core=> "
<-RES----
"123\ngame.core=> "
----CMD->
"(send-edn \"hej\")\n"
<-RES----
"nil\ngame.core=> "
----CMD->
"@data\n"
<-RES----
"\"hej\"\ngame.core=> "
----CMD->
"(send-edn \"hej LULE\")\n"
<-RES----
"nil\ngame.core=> "
----CMD->
"@data\n"
<-RES----
"\"hej LULE\"\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import Test)) (defonce data (atom {})) (add-watch data :data-watcher (fn [_ _ _ _] (msg \"got new data! \" data))) (defn got-edn  [edn]  (reset! data edn)) (defn send-edn  [edn]  (.. (cmpt (object-named \"EventSystem\") Test) (SendEdnMsg edn)))\n"
<-RES----
"nil\n"
----CMD->
"1\n"
<-RES----
"nil\n"
<-RES----
"CompilerException System.InvalidOperationException: Unable to resolve symbol: msg in this context\n  at clojure.lang.Compiler.ResolveIn (clojure.lang.Namespace n, clojure.lang.Symbol symbol, System.Boolean allowPrivate) [0x0011c] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.Resolve (clojure.lang.Symbol symbol) [0x00005] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.AnalyzeSymbol (clojure.lang.Symbol symbol) [0x000fa] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.Analyze (clojure.lang.CljCompiler.Ast.ParserContext pcontext, System.Object form, System.String name) [0x00078] in <e5c1049893bf4d6f8893a41079c4a366>:0 , compiling: (NO_SOURCE_PATH:27:141)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.InvokeExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.BodyExpr+Parser.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnMethod.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.InvokeExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.BodyExpr+Parser.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnMethod.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\n"
<-RES----
"#'game.core/got-edn\n"
<-RES----
"#'game.core/send-edn\ngame.core=> "
<-RES----
"1\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import Test)) (defonce data (atom {})) (add-watch data :data-watcher (fn [_ _ _ _] (log \"got new data! \" data))) (defn got-edn  [edn]  (reset! data edn)) (defn send-edn  [edn]  (.. (cmpt (object-named \"EventSystem\") Test) (SendEdnMsg edn)))\n"
<-RES----
"nil\n"
----CMD->
"1\n"
<-RES----
"nil\n"
<-RES----
"#object[Atom 0xa531d200 {:status :ready, :val \"hej LULE\"}]\n"
<-RES----
"#'game.core/got-edn\n"
<-RES----
"#'game.core/send-edn\ngame.core=> "
<-RES----
"1\ngame.core=> "
----CMD->
"(send-edn \"hej LULE\")\n"
<-RES----
"nil\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import UnityEngine.Networking  UnityEngine.Networking.NetworkSystem  Test)) (defonce data (atom {})) (add-watch data :data-watcher (fn [_ _ _ _] (log \"got new data! \" data))) (defn got-edn  [edn]  (reset! data edn)) (defn send-edn  [edn]  (.. )  )\n"
<-RES----
"NullReferenceException Object reference not set to an instance of an object\nclojure.lang.Util.NameForType (:0)\nclojure.lang.Namespace.importClass (:0)\ngame/core$eval__32907loading__5832__auto____32912__32915.invoke (:0)\ngame/core$eval__32907__32918.invokeStatic (:0)\ngame/core$eval__32907__32918.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\n"
----CMD->
"1\n"
<-RES----
"nil\n"
<-RES----
"#object[Atom 0xa531d200 {:status :ready, :val \"hej LULE\"}]\n"
<-RES----
"#'game.core/got-edn\n"
<-RES----
"CompilerException clojure.lang.ArityException: Wrong number of args (0) passed to: clojure/core/-DOT--DOT---1650\n  at clojure.lang.Compiler.MacroexpandSeq1 (clojure.lang.ISeq form) [0x00062] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.AnalyzeSeq (clojure.lang.CljCompiler.Ast.ParserContext pcon, clojure.lang.ISeq form, System.String name) [0x000e0] in <e5c1049893bf4d6f8893a41079c4a366>:0 , compiling: (NO_SOURCE_PATH:32:297)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.BodyExpr+Parser.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnMethod.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.DefExpr+Parser.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
<-RES----
"1\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine Networking]  [UnityEngine.Networking.NetworkSystem]  Test))\n"
<-RES----
"NullReferenceException Object reference not set to an instance of an object\nclojure.lang.Util.NameForType (:0)\nclojure.lang.Namespace.importClass (:0)\ngame/core$eval__32957loading__5832__auto____32962__32965.invoke (:0)\ngame/core$eval__32957__32968.invokeStatic (:0)\ngame/core$eval__32957__32968.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine Networking]  [UnityEngine.Networking.NetworkSystem]  ))\n"
<-RES----
"NullReferenceException Object reference not set to an instance of an object\nclojure.lang.Util.NameForType (:0)\nclojure.lang.Namespace.importClass (:0)\ngame/core$eval__32977loading__5832__auto____32982__32985.invoke (:0)\ngame/core$eval__32977__32988.invokeStatic (:0)\ngame/core$eval__32977__32988.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine Networking]    ))\n"
<-RES----
"NullReferenceException Object reference not set to an instance of an object\nclojure.lang.Util.NameForType (:0)\nclojure.lang.Namespace.importClass (:0)\ngame/core$eval__32997loading__5832__auto____33002__33005.invoke (:0)\ngame/core$eval__32997__33008.invokeStatic (:0)\ngame/core$eval__32997__33008.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import UnityEngine    ))\n"
<-RES----
"NullReferenceException Object reference not set to an instance of an object\nclojure.lang.Util.NameForType (:0)\nclojure.lang.Namespace.importClass (:0)\ngame/core$eval__33017loading__5832__auto____33022__33025.invoke (:0)\ngame/core$eval__33017__33028.invokeStatic (:0)\ngame/core$eval__33017__33028.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  )\n"
<-RES----
"nil\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine Networking NetworkServer]    ))\n"
<-RES----
"NullReferenceException Object reference not set to an instance of an object\nclojure.lang.Util.NameForType (:0)\nclojure.lang.Namespace.importClass (:0)\ngame/core$eval__33071loading__5832__auto____33076__33079.invoke (:0)\ngame/core$eval__33071__33082.invokeStatic (:0)\ngame/core$eval__33071__33082.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine NetworkSystem NetworkServer]    ))\n"
<-RES----
"NullReferenceException Object reference not set to an instance of an object\nclojure.lang.Util.NameForType (:0)\nclojure.lang.Namespace.importClass (:0)\ngame/core$eval__33091loading__5832__auto____33096__33099.invoke (:0)\ngame/core$eval__33091__33102.invokeStatic (:0)\ngame/core$eval__33091__33102.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine.NetworkSystem NetworkServer]    ))\n"
<-RES----
"NullReferenceException Object reference not set to an instance of an object\nclojure.lang.Util.NameForType (:0)\nclojure.lang.Namespace.importClass (:0)\ngame/core$eval__33111loading__5832__auto____33116__33119.invoke (:0)\ngame/core$eval__33111__33122.invokeStatic (:0)\ngame/core$eval__33111__33122.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"UnityEngine.NetworkSystem.NetworkServer\n"
<-RES----
"CompilerException Unable to find type: UnityEngine.NetworkSystem.NetworkServer, compiling: (NO_SOURCE_PATH:0:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"UnityEngine\n"
<-RES----
"CompilerException System.InvalidOperationException: Unable to resolve symbol: UnityEngine in this context\n  at clojure.lang.Compiler.ResolveIn (clojure.lang.Namespace n, clojure.lang.Symbol symbol, System.Boolean allowPrivate) [0x0011c] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.Resolve (clojure.lang.Symbol symbol) [0x00005] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.AnalyzeSymbol (clojure.lang.Symbol symbol) [0x000fa] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.Analyze (clojure.lang.CljCompiler.Ast.ParserContext pcontext, System.Object form, System.String name) [0x00078] in <e5c1049893bf4d6f8893a41079c4a366>:0 , compiling: (NO_SOURCE_PATH:0:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"UnityEngine.NetworkSystem\n"
<-RES----
"CompilerException Unable to find type: UnityEngine.NetworkSystem, compiling: (NO_SOURCE_PATH:0:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"UnityEngine.Networking\n"
<-RES----
"CompilerException Unable to find type: UnityEngine.Networking, compiling: (NO_SOURCE_PATH:0:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine.Networking NetworkServer]    ))\n"
<-RES----
"nil\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine.Networking NetworkServer]    ))\n"
<-RES----
"nil\ngame.core=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine.Networking NetworkServer]  EdnMsg))\n"
<-RES----
"nil\ngame.core=> "
----CMD->
"(load-file \"/Users/jona/unity/arcadia-network-example/Assets/game/core.clj\")\n"
<-RES----
"CompilerException System.InvalidOperationException: No constructor in type: EdnMsg with 1 arguments\n  at clojure.lang.CljCompiler.Ast.NewExpr.ComputeCtor () [0x00087] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.CljCompiler.Ast.NewExpr..ctor (System.Type type, System.Collections.Generic.IList`1[T] args, clojure.lang.IPersistentMap spanMap) [0x0001b] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.CljCompiler.Ast.NewExpr+Parser.Parse (clojure.lang.CljCompiler.Ast.ParserContext pcon, System.Object frm) [0x00063] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Compiler.AnalyzeSeq (clojure.lang.CljCompiler.Ast.ParserContext pcon, clojure.lang.ISeq form, System.String name) [0x00177] in <e5c1049893bf4d6f8893a41079c4a366>:0 , compiling: (/Users/jona/unity/arcadia-network-example/Assets/game/core.clj:16:53)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.HostExpr.ParseArgs (:0)\nclojure.lang.CljCompiler.Ast.HostExpr+Parser.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.BodyExpr+Parser.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnMethod.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.DefExpr+Parser.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.load (:0)\nclojure.lang.Compiler.loadFile (:0)\nclojure.lang.RT+LoadFileFn.invoke (:0)\ngame/core$eval__33226__33231.invokeStatic (:0)\ngame/core$eval__33226__33231.invoke (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\n"
<-RES----
"game.core=> "
<-RES----
"something dreadful happened\n\n"
<-RES----
"  at (wrapper managed-to-native) System.Object.__icall_wrapper_ves_icall_object_new_specific(intptr)\n  at clojure.lang.MapEntry.create (System.Object key, System.Object val) [0x00000] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.PersistentHashMap+BitmapIndexedNode.Find (System.Int32 shift, System.Int32 hash, System.Object key) [0x00051] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.PersistentHashMap+BitmapIndexedNode.Find (System.Int32 shift, System.Int32 hash, System.Object key) [0x00037] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.PersistentHashMap+BitmapIndexedNode.Find (System.Int32 shift, System.Int32 hash, System.Object key) [0x00037] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.PersistentHashMap.entryAt (System.Object key) [0x00033] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Var.getThreadBinding () [0x00017] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at clojure.lang.Var.deref () [0x00000] in <e5c1049893bf4d6f8893a41079c4a366>:0 \n  at arcadia/socket_repl$repl_readfn__29049__29054.invoke () [0x0000a] in <d6fccb08ceac4a2ea32322fe0ff82838>:0 \nThreadAbortException \nNO_CLASS.NO_METHOD (:0)\nclojure.lang.MapEntry.create (:0)\nclojure.lang.PersistentHashMap+BitmapIndexedNode.Find (:0)\nclojure.lang.PersistentHashMap+BitmapIndexedNode.Find (:0)\nclojure.lang.PersistentHashMap+BitmapIndexedNode.Find (:0)\nclojure.lang.PersistentHashMap.entryAt (:0)\nclojure.lang.Var.getThreadBinding (:0)\nclojure.lang.Var.deref (:0)\narcadia/socket_repl$repl_readfn__29049__29054.invoke (:0)\nThreadAbortException \nclojure/main$replread_eval_print__14303__14323.invoke (:0)\nclojure/main$replfn__14335__14339.invoke (:0)\n"
<-RES----
"user=> "
----CMD->
"(find-ns 'lumo.repl)"
<-RES----
"nil\n"
----CMD->
"(find-ns 'planck.repl)"
<-RES----
""
----CMD->
"123\n"
<-RES----
"nil\nuser=> user=> "
----CMD->
"123\n"
<-RES----
"123\nuser=> "
<-RES----
"123\nuser=> "
----CMD->
"(load-file \"/Users/jona/unity/arcadia-network-example/Assets/game/core.clj\")\n"
<-RES----
"#'game.core/send-edn\nuser=> "
----CMD->
"(in-ns game.core)\n"
<-RES----
"CompilerException Unable to find type: game.core, compiling: (NO_SOURCE_PATH:8:2)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.InvokeExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.CljCompiler.Ast.BodyExpr+Parser.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnMethod.Parse (:0)\nclojure.lang.CljCompiler.Ast.FnExpr.Parse (:0)\nclojure.lang.Compiler.AnalyzeSeq (:0)\nclojure.lang.Compiler.Analyze (:0)\nclojure.lang.Compiler.eval (:0)\nclojure.lang.Compiler.eval (:0)\nclojure/core$eval__3112.invokeStatic (:0)\nclojure/core$eval__3112.invoke (:0)\narcadia/socket_repl$game_thread_evalfn__29078fn__29083__29095.invoke (:0)\nuser=> "
----CMD->
"(in-ns 'game.core)\n"
<-RES----
"#object[Namespace 0x2bd42e00 \"game.core\"]\ngame.core=> "
----CMD->
"(send-edn \"hej\")\n"
<-RES----
"true\ngame.core=> "
----CMD->
"@data\n"
<-RES----
"\"hej\"\ngame.core=> "
<-RES----
"something dreadful happened\n\n"
<-RES----
"  at (wrapper managed-to-native) System.Threading.Thread.SleepInternal(int)\n  at System.Threading.Thread.Sleep (System.Int32 millisecondsTimeout) [0x00019] in <f826c2584fc94ec19a48a6576640bdc5>:0 \n  at arcadia/socket_repl$repl_readfn__29049__29054.invoke () [0x0017d] in <b7ac656afae3419d9f3189862fa61f5d>:0 \nThreadAbortException \nNO_CLASS.NO_METHOD (:0)\nSystem.Threading.Thread.Sleep (:0)\narcadia/socket_repl$repl_readfn__29049__29054.invoke (:0)\nThreadAbortException \nclojure/main$replread_eval_print__14303__14323.invoke (:0)\nclojure/main$replfn__14335__14339.invoke (:0)\n"
<-RES----
"user=> "
----CMD->
"(find-ns 'lumo.repl)"
<-RES----
"nil\n"
----CMD->
"(find-ns 'planck.repl)"
<-RES----
""
----CMD->
"1\n"
<-RES----
"nil\nuser=> user=> "
<-RES----
"1\nuser=> "
----CMD->
"123\n"
<-RES----
"123\nuser=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine.Networking NetworkServer]  EdnMsg)) (defonce data (atom {})) (add-watch data :data-watcher (fn [_ _ _ _] (log \"got new data! \" data))) (defn got-edn  [edn]  (reset! data edn)) (defn send-edn  [edn]  (.. NetworkServer (SendToAll (.. EdnMsg MsgType) (EdnMsg. edn))))\n"
----CMD->
"1\n"
----CMD->
"2\n"
<-RES----
"nil\n"
----CMD->
"3\n"
<-RES----
"#'game.core/data\n"
<-RES----
"#object[Atom 0x40367600 {:status :ready, :val {}}]\n"
<-RES----
"#'game.core/got-edn\n"
----CMD->
"4\n"
<-RES----
"#'game.core/send-edn\n"
<-RES----
"game.core=> "
<-RES----
"1\ngame.core=> "
----CMD->
"(send-edn \"hej\")\n"
<-RES----
"2\ngame.core=> "
<-RES----
"3\ngame.core=> "
<-RES----
"4\ngame.core=> "
<-RES----
"true\ngame.core=> "
----CMD->
"@data\n"
<-RES----
"\"hej\"\ngame.core=> "
----CMD->
"(defn got-edn  [edn]  (reset! data (read-string edn)))\n"
<-RES----
"#'game.core/got-edn\ngame.core=> "
----CMD->
"@data\n"
<-RES----
"\"hej\"\ngame.core=> "
----CMD->
"(send-edn \"hej\")\n"
<-RES----
"true\ngame.core=> "
----CMD->
"@data\n"
<-RES----
"hej\ngame.core=> "
----CMD->
"(send-edn \"{:data 123\")\n"
<-RES----
"true\ngame.core=> "
----CMD->
"(send-edn \"{:data 123}\")\n"
<-RES----
"true\ngame.core=> "
----CMD->
"@data\n"
<-RES----
"{:data 123}\n"
<-RES----
"game.core=> "
<-RES----
"user=> "
----CMD->
"(ns game.core  (:require [arcadia.core :refer :all])  (:import [UnityEngine.Networking NetworkServer]  EdnMsg)) (defonce data (atom {})) (add-watch data :data-watcher (fn [_ _ _ _] (log \"got new data! \" data))) (defn got-edn  [edn]  (reset! data (read-string edn))) (defn send-edn  [edn]  (.. NetworkServer (SendToAll (.. EdnMsg MsgType) (EdnMsg. edn))))\n"
<-RES----
"nil\n"
----CMD->
"(find-ns 'lumo.repl)"
<-RES----
"#'game.core/data\n#object[Atom 0x75ca6e00 {:status :ready, :val {}}]\n#'game.core/got-edn\n#'game.core/send-edn\n"
----CMD->
"123\n"
<-RES----
"nil\ngame.core=> "
<-RES----
"game.core=> "
<-RES----
"123\n"
<-RES----
"game.core=> "
----CMD->
"(send-edn \"{:data 123}\")\n"
<-RES----
"true\ngame.core=> "
----CMD->
"@data\n"
<-RES----
"{:data 123}\n"
<-RES----
"game.core=> "